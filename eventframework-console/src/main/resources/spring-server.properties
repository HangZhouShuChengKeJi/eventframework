# 内嵌服务器配置 (org.springframework.boot.autoconfigure.web.ServerProperties)

# Network address to which the server should bind.
server.address=
# Whether response compression is enabled.
server.compression.enabled=false
# Comma-separated list of user agents for which responses should not be compressed.
server.compression.excluded-user-agents=
# Comma-separated list of MIME types that should be compressed.
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml 
# Minimum "Content-Length" value that is required for compression to be performed.
server.compression.min-response-size=2KB
# Time that connectors wait for another HTTP request before closing the connection. When not set, the connector's container-specific default is used. Use a value of -1 to indicate no (that is, an infinite) timeout.
server.connection-timeout=
# Include the "exception" attribute.
server.error.include-exception=true
# When to include a "stacktrace" attribute.
server.error.include-stacktrace=never
# Path of the error controller.
server.error.path=/error
# Whether to enable the default error page displayed in browsers in case of a server error.
server.error.whitelabel.enabled=true
# Whether to enable HTTP/2 support, if the current environment supports it.
server.http2.enabled=false
# Maximum size of the HTTP message header.
server.max-http-header-size=8KB
# 服务器端口
server.port=4000
# Value to use for the Server response header (if empty, no header is sent).
server.server-header=
# Whether X-Forwarded-* headers should be applied to the HttpRequest.
server.use-forward-headers=
# Servlet context init parameters.
#server.servlet.context-parameters.*=
# Context path of the application.
server.servlet.context-path=/
# Display name of the application.
server.servlet.application-display-name=application
# Class name of the servlet to use for JSPs.
server.servlet.jsp.class-name=
# Init parameters used to configure the JSP servlet.
#server.servlet.jsp.init-parameters.*=
# Whether the JSP servlet is registered.
server.servlet.jsp.registered=false
# Comment for the session cookie.
server.servlet.session.cookie.comment=
# Domain for the session cookie.
server.servlet.session.cookie.domain=
# Whether to use "HttpOnly" cookies for session cookies.
server.servlet.session.cookie.http-only=
# Maximum age of the session cookie. If a duration suffix is not specified, seconds will be used.
server.servlet.session.cookie.max-age=
# Session cookie name.
server.servlet.session.cookie.name=
# Path of the session cookie.
server.servlet.session.cookie.path=
# Whether to always mark the session cookie as secure.
server.servlet.session.cookie.secure=
# Whether to persist session data between restarts.
server.servlet.session.persistent=false
# Directory used to store session data.
server.servlet.session.store-dir=
# Session timeout. If a duration suffix is not specified, seconds will be used.
server.servlet.session.timeout=30m
# Session tracking modes.
server.servlet.session.tracking-modes=

## Supported SSL ciphers.
#server.ssl.ciphers=
## Client authentication mode.
#server.ssl.client-auth=
## Whether to enable SSL support.
#server.ssl.enabled=true
## Enabled SSL protocols.
#server.ssl.enabled-protocols=
## Alias that identifies the key in the key store.
#server.ssl.key-alias=
## Password used to access the key in the key store.
#server.ssl.key-password=
## Path to the key store that holds the SSL certificate (typically a jks file).
#server.ssl.key-store=
## Password used to access the key store.
#server.ssl.key-store-password=
## Provider for the key store.
#server.ssl.key-store-provider=
## Type of the key store.
#server.ssl.key-store-type=
## SSL protocol to use.
#server.ssl.protocol=TLS
## Trust store that holds SSL certificates.
#server.ssl.trust-store=
## Password used to access the trust store.
#server.ssl.trust-store-password=
## Provider for the trust store.
#server.ssl.trust-store-provider=
## Type of the trust store.
#server.ssl.trust-store-type=

# tomcat 服务器配置

# 当请求根上下文的时候，是否追加一个 '/' 来重定向
server.tomcat.redirect-context-root=true

# tomcat 基目录
server.tomcat.basedir=/Users/yajun/springboot/eventframework_console/tomcat
# 可信任的代理机器
server.tomcat.internal-proxies=127\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|0:0:0:0:0:0:0:1|::1
# 接受的最大连接数
server.tomcat.max-connections=10000
# URL 提交参数的大小限制（默认 2MB）
server.tomcat.max-http-post-size=2MB
# 请求体的大小限制（默认 2MB）
server.tomcat.max-swallow-size=2MB
# 最大工作线程数
server.tomcat.max-threads=200
# 最小工作线程数
server.tomcat.min-spare-threads=10
# 当 tomcat 启动的线程数已达到最大数量时，接受排队的请求个数
server.tomcat.accept-count=100

# 是否开启静态资源缓存
server.tomcat.resource.allow-caching=true
# 静态资源缓存时间
server.tomcat.resource.cache-ttl=
# URI 编码
server.tomcat.uri-encoding=UTF-8

# 是否启用访问日志缓冲
server.tomcat.accesslog.buffered=true
# 访问日志 目录（可以是绝对路径，也可以是相对 "server.tomcat.basedir" 的路径）
server.tomcat.accesslog.directory=logs
# 是否启用 访问日志
server.tomcat.accesslog.enabled=true
# 访问日志 文件名后缀日期格式
server.tomcat.accesslog.file-date-format=.yyyy-MM-dd
# 访问日志 输出格式
server.tomcat.accesslog.pattern=common
# 访问日志 文件名前缀
server.tomcat.accesslog.prefix=access_log
# Whether to defer inclusion of the date stamp in the file name until rotate time.
server.tomcat.accesslog.rename-on-rotate=false
# Set request attributes for the IP address, Hostname, protocol, and port used for the request.
server.tomcat.accesslog.request-attributes-enabled=false
# 是否启用日志轮转（每天一个日志文件）
server.tomcat.accesslog.rotate=true
# 访问日志 文件名后缀
server.tomcat.accesslog.suffix=.log

# 扫描 TLD 文件时，忽略的 jar 文件表达式，多个表达式以半角逗号分隔
server.tomcat.additional-tld-skip-patterns=
# Delay between the invocation of backgroundProcess methods. If a duration suffix is not specified, seconds will be used.
server.tomcat.background-processor-delay=10s

# 保存传入端口的请求头名称，通常命名为“X-Forwarded-Proto”
server.tomcat.port-header=X-Forwarded-Port
# 保存传入协议的请求头名称，通常命名为“X-Forwarded-Proto”
server.tomcat.protocol-header=X-Forwarded-Proto
# 使用 SSL 时，传入协议的值
server.tomcat.protocol-header-https-value=https
# 提取远程 IP 的 HTTP 头（header）名称。例如：`X-FORWARDED-FOR`
server.tomcat.remote-ip-header=X-FORWARDED-FOR

# Whether HTTP 1.1 and later location headers generated by a call to sendRedirect will use relative or absolute redirects.
#server.tomcat.use-relative-redirects=



